{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import data from './dataset.json';\n\ntype Result = {\n  best: string;\n  probabilities: {\n    [lang: string]: number;\n  };\n};\n\n/**\n * Tokenize the text to only get the words\n * @param text\n * @returns\n */\nfunction tokenize(text: string) {\n  return text\n    .toLowerCase()\n    .replace(/[\\W_]+/g, ' ')\n    .trim()\n    .split(/\\s+/);\n}\n\n/**\n * Give a sorted list of the detected langage from a text\n * @param text\n * @returns\n */\nfunction langy(text: string): Result {\n  const tokens = tokenize(text);\n  const dataEntries = Object.entries(data);\n  const result: Result = {\n    best: '',\n    probabilities: {}\n  };\n\n  let totalWordsFound = 0;\n\n  for (const token of tokens) {\n    for (const [lang, words] of dataEntries) {\n      if (!(words as string[]).includes(token)) continue;\n\n      totalWordsFound++;\n\n      if (!(lang in result.probabilities)) {\n        result.probabilities[lang] = 1;\n      } else {\n        result.probabilities[lang]++;\n      }\n    }\n  }\n\n  let bestLang = '';\n  let bestScore = 0;\n\n  for (const lang in result.probabilities) {\n    const proba = result.probabilities[lang] / totalWordsFound;\n    result.probabilities[lang] = proba;\n\n    if (proba > bestScore) {\n      bestLang = lang;\n      bestScore = proba;\n    }\n  }\n\n  result.best = bestLang;\n\n  return result;\n}\n\nexport default langy;\n"],"names":["text","tokens","toLowerCase","replace","trim","split","tokenize","dataEntries","Object","entries","data","result","best","probabilities","totalWordsFound","token","lang","words","includes","bestLang","bestScore","proba"],"mappings":"439jHA2BA,SAAeA,GACb,MAAMC,EAdR,SAAkBD,GAChB,OAAOA,EACJE,cACAC,QAAQ,UAAW,KACnBC,OACAC,MAAM,MACX,CAQiBC,CAASN,GAClBO,EAAcC,OAAOC,QAAQC,GAC7BC,EAAiB,CACrBC,KAAM,GACNC,cAAe,CAAE,GAGnB,IAAIC,EAAkB,EAEtB,IAAK,MAAMC,KAASd,EAClB,IAAK,MAAOe,EAAMC,KAAUV,EACpBU,EAAmBC,SAASH,KAElCD,IAEME,KAAQL,EAAOE,cAGnBF,EAAOE,cAAcG,KAFrBL,EAAOE,cAAcG,GAAQ,GAOnC,IAAIG,EAAW,GACXC,EAAY,EAEhB,IAAK,MAAMJ,KAAQL,EAAOE,cAAe,CACvC,MAAMQ,EAAQV,EAAOE,cAAcG,GAAQF,EAC3CH,EAAOE,cAAcG,GAAQK,EAEzBA,EAAQD,IACVD,EAAWH,EACXI,EAAYC,EAEf,CAID,OAFAV,EAAOC,KAAOO,EAEPR,CACT"}