{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import data from './dataset.json';\r\n\r\ntype Result = {\r\n  best: string;\r\n  probabilities: {\r\n    [lang: string]: number;\r\n  };\r\n};\r\n\r\n/**\r\n * Tokenize the text to only get the words\r\n * @param text\r\n * @returns\r\n */\r\nfunction tokenize(text: string) {\r\n  return text\r\n    .toLowerCase()\r\n    .replace(/[\\W_]+/g, ' ')\r\n    .trim()\r\n    .split(/\\s+/);\r\n}\r\n\r\n/**\r\n * Give a sorted list of the detected langage from a text\r\n * @param text\r\n * @returns\r\n */\r\nfunction langy(text: string): Result {\r\n  const tokens = tokenize(text);\r\n  const dataEntries = Object.entries(data);\r\n  const result: Result = {\r\n    best: '',\r\n    probabilities: {}\r\n  };\r\n\r\n  let totalWordsFound = 0;\r\n\r\n  for (const token of tokens) {\r\n    for (const [lang, words] of dataEntries) {\r\n      if (!(words as string[]).includes(token)) continue;\r\n\r\n      totalWordsFound++;\r\n\r\n      if (!(lang in result.probabilities)) {\r\n        result.probabilities[lang] = 1;\r\n      } else {\r\n        result.probabilities[lang]++;\r\n      }\r\n    }\r\n  }\r\n\r\n  let bestLang = '';\r\n  let bestScore = 0;\r\n\r\n  for (const lang in result.probabilities) {\r\n    const proba = result.probabilities[lang] / totalWordsFound;\r\n    result.probabilities[lang] = proba;\r\n\r\n    if (proba > bestScore) {\r\n      bestLang = lang;\r\n      bestScore = proba;\r\n    }\r\n  }\r\n\r\n  result.best = bestLang;\r\n\r\n  return result;\r\n}\r\n\r\nexport default langy;\r\n"],"names":["text","tokens","toLowerCase","replace","trim","split","tokenize","dataEntries","Object","entries","data","result","best","probabilities","totalWordsFound","token","lang","words","includes","bestLang","bestScore","proba"],"mappings":"439jHA2BA,SAAeA,GACb,MAAMC,EAdR,SAAkBD,GAChB,OAAOA,EACJE,cACAC,QAAQ,UAAW,KACnBC,OACAC,MAAM,MACX,CAQiBC,CAASN,GAClBO,EAAcC,OAAOC,QAAQC,GAC7BC,EAAiB,CACrBC,KAAM,GACNC,cAAe,CAAE,GAGnB,IAAIC,EAAkB,EAEtB,IAAK,MAAMC,KAASd,EAClB,IAAK,MAAOe,EAAMC,KAAUV,EACpBU,EAAmBC,SAASH,KAElCD,IAEME,KAAQL,EAAOE,cAGnBF,EAAOE,cAAcG,KAFrBL,EAAOE,cAAcG,GAAQ,GAOnC,IAAIG,EAAW,GACXC,EAAY,EAEhB,IAAK,MAAMJ,KAAQL,EAAOE,cAAe,CACvC,MAAMQ,EAAQV,EAAOE,cAAcG,GAAQF,EAC3CH,EAAOE,cAAcG,GAAQK,EAEzBA,EAAQD,IACVD,EAAWH,EACXI,EAAYC,EAEf,CAID,OAFAV,EAAOC,KAAOO,EAEPR,CACT"}